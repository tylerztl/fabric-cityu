// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/mempool.proto

package common // import "github.com/hyperledger/fabric/protos/common"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusCode int32

const (
	StatusCode_SUCCESS StatusCode = 0
	StatusCode_FAILED  StatusCode = 1
)

var StatusCode_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILED",
}
var StatusCode_value = map[string]int32{
	"SUCCESS": 0,
	"FAILED":  1,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_mempool_53b3303aa41ca92c, []int{0}
}

type SubmitTxResponse struct {
	Status               StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=protos.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SubmitTxResponse) Reset()         { *m = SubmitTxResponse{} }
func (m *SubmitTxResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitTxResponse) ProtoMessage()    {}
func (*SubmitTxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_mempool_53b3303aa41ca92c, []int{0}
}
func (m *SubmitTxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTxResponse.Unmarshal(m, b)
}
func (m *SubmitTxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTxResponse.Marshal(b, m, deterministic)
}
func (dst *SubmitTxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTxResponse.Merge(dst, src)
}
func (m *SubmitTxResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitTxResponse.Size(m)
}
func (m *SubmitTxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTxResponse proto.InternalMessageInfo

func (m *SubmitTxResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_SUCCESS
}

type FetchTxsRequest struct {
	Requester            string   `protobuf:"bytes,1,opt,name=requester,proto3" json:"requester,omitempty"`
	BlockHeight          uint64   `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchTxsRequest) Reset()         { *m = FetchTxsRequest{} }
func (m *FetchTxsRequest) String() string { return proto.CompactTextString(m) }
func (*FetchTxsRequest) ProtoMessage()    {}
func (*FetchTxsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_mempool_53b3303aa41ca92c, []int{1}
}
func (m *FetchTxsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchTxsRequest.Unmarshal(m, b)
}
func (m *FetchTxsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchTxsRequest.Marshal(b, m, deterministic)
}
func (dst *FetchTxsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchTxsRequest.Merge(dst, src)
}
func (m *FetchTxsRequest) XXX_Size() int {
	return xxx_messageInfo_FetchTxsRequest.Size(m)
}
func (m *FetchTxsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchTxsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchTxsRequest proto.InternalMessageInfo

func (m *FetchTxsRequest) GetRequester() string {
	if m != nil {
		return m.Requester
	}
	return ""
}

func (m *FetchTxsRequest) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

type FetchTxsResponse struct {
	TxNum                int32    `protobuf:"varint,1,opt,name=tx_num,json=txNum,proto3" json:"tx_num,omitempty"`
	FeeReward            uint64   `protobuf:"varint,2,opt,name=fee_reward,json=feeReward,proto3" json:"fee_reward,omitempty"`
	IsEmpty              bool     `protobuf:"varint,3,opt,name=is_empty,json=isEmpty,proto3" json:"is_empty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchTxsResponse) Reset()         { *m = FetchTxsResponse{} }
func (m *FetchTxsResponse) String() string { return proto.CompactTextString(m) }
func (*FetchTxsResponse) ProtoMessage()    {}
func (*FetchTxsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_mempool_53b3303aa41ca92c, []int{2}
}
func (m *FetchTxsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchTxsResponse.Unmarshal(m, b)
}
func (m *FetchTxsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchTxsResponse.Marshal(b, m, deterministic)
}
func (dst *FetchTxsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchTxsResponse.Merge(dst, src)
}
func (m *FetchTxsResponse) XXX_Size() int {
	return xxx_messageInfo_FetchTxsResponse.Size(m)
}
func (m *FetchTxsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchTxsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchTxsResponse proto.InternalMessageInfo

func (m *FetchTxsResponse) GetTxNum() int32 {
	if m != nil {
		return m.TxNum
	}
	return 0
}

func (m *FetchTxsResponse) GetFeeReward() uint64 {
	if m != nil {
		return m.FeeReward
	}
	return 0
}

func (m *FetchTxsResponse) GetIsEmpty() bool {
	if m != nil {
		return m.IsEmpty
	}
	return false
}

type EndorsedTransaction struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndorsedTransaction) Reset()         { *m = EndorsedTransaction{} }
func (m *EndorsedTransaction) String() string { return proto.CompactTextString(m) }
func (*EndorsedTransaction) ProtoMessage()    {}
func (*EndorsedTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_mempool_53b3303aa41ca92c, []int{3}
}
func (m *EndorsedTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndorsedTransaction.Unmarshal(m, b)
}
func (m *EndorsedTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndorsedTransaction.Marshal(b, m, deterministic)
}
func (dst *EndorsedTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndorsedTransaction.Merge(dst, src)
}
func (m *EndorsedTransaction) XXX_Size() int {
	return xxx_messageInfo_EndorsedTransaction.Size(m)
}
func (m *EndorsedTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_EndorsedTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_EndorsedTransaction proto.InternalMessageInfo

func (m *EndorsedTransaction) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

func init() {
	proto.RegisterType((*SubmitTxResponse)(nil), "protos.SubmitTxResponse")
	proto.RegisterType((*FetchTxsRequest)(nil), "protos.FetchTxsRequest")
	proto.RegisterType((*FetchTxsResponse)(nil), "protos.FetchTxsResponse")
	proto.RegisterType((*EndorsedTransaction)(nil), "protos.EndorsedTransaction")
	proto.RegisterEnum("protos.StatusCode", StatusCode_name, StatusCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MempoolClient is the client API for Mempool service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MempoolClient interface {
	SubmitTransaction(ctx context.Context, in *EndorsedTransaction, opts ...grpc.CallOption) (*SubmitTxResponse, error)
	FetchTransactions(ctx context.Context, in *FetchTxsRequest, opts ...grpc.CallOption) (*FetchTxsResponse, error)
}

type mempoolClient struct {
	cc *grpc.ClientConn
}

func NewMempoolClient(cc *grpc.ClientConn) MempoolClient {
	return &mempoolClient{cc}
}

func (c *mempoolClient) SubmitTransaction(ctx context.Context, in *EndorsedTransaction, opts ...grpc.CallOption) (*SubmitTxResponse, error) {
	out := new(SubmitTxResponse)
	err := c.cc.Invoke(ctx, "/protos.Mempool/SubmitTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mempoolClient) FetchTransactions(ctx context.Context, in *FetchTxsRequest, opts ...grpc.CallOption) (*FetchTxsResponse, error) {
	out := new(FetchTxsResponse)
	err := c.cc.Invoke(ctx, "/protos.Mempool/FetchTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MempoolServer is the server API for Mempool service.
type MempoolServer interface {
	SubmitTransaction(context.Context, *EndorsedTransaction) (*SubmitTxResponse, error)
	FetchTransactions(context.Context, *FetchTxsRequest) (*FetchTxsResponse, error)
}

func RegisterMempoolServer(s *grpc.Server, srv MempoolServer) {
	s.RegisterService(&_Mempool_serviceDesc, srv)
}

func _Mempool_SubmitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndorsedTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MempoolServer).SubmitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Mempool/SubmitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MempoolServer).SubmitTransaction(ctx, req.(*EndorsedTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mempool_FetchTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchTxsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MempoolServer).FetchTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Mempool/FetchTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MempoolServer).FetchTransactions(ctx, req.(*FetchTxsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mempool_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Mempool",
	HandlerType: (*MempoolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitTransaction",
			Handler:    _Mempool_SubmitTransaction_Handler,
		},
		{
			MethodName: "FetchTransactions",
			Handler:    _Mempool_FetchTransactions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "common/mempool.proto",
}

func init() { proto.RegisterFile("common/mempool.proto", fileDescriptor_mempool_53b3303aa41ca92c) }

var fileDescriptor_mempool_53b3303aa41ca92c = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x5f, 0x8b, 0xd3, 0x40,
	0x14, 0xc5, 0x9b, 0xea, 0xa6, 0xdb, 0xbb, 0xcb, 0x9a, 0x1d, 0x15, 0xe3, 0x3f, 0xa8, 0xc1, 0x85,
	0xb2, 0x42, 0x02, 0xeb, 0xbb, 0xa0, 0x35, 0x4b, 0x85, 0xea, 0xc3, 0xa4, 0xbe, 0xf8, 0x12, 0xf2,
	0xe7, 0x36, 0x09, 0x76, 0x32, 0x71, 0x66, 0x82, 0xe9, 0xc7, 0xf1, 0x9b, 0x4a, 0x67, 0x52, 0x53,
	0x8a, 0x4f, 0xc9, 0x3d, 0x9c, 0x7b, 0xee, 0xcc, 0x6f, 0x2e, 0x3c, 0xc9, 0x38, 0x63, 0xbc, 0x0e,
	0x18, 0xb2, 0x86, 0xf3, 0xad, 0xdf, 0x08, 0xae, 0x38, 0xb1, 0xf5, 0x47, 0x7a, 0x1f, 0xc0, 0x89,
	0xda, 0x94, 0x55, 0x6a, 0xdd, 0x51, 0x94, 0x0d, 0xaf, 0x25, 0x92, 0x5b, 0xb0, 0xa5, 0x4a, 0x54,
	0x2b, 0x5d, 0x6b, 0x66, 0xcd, 0xaf, 0xee, 0x88, 0xe9, 0x91, 0x7e, 0xa4, 0xd5, 0x05, 0xcf, 0x91,
	0xf6, 0x0e, 0x8f, 0xc2, 0xa3, 0x7b, 0x54, 0x59, 0xb9, 0xee, 0x24, 0xc5, 0x5f, 0x2d, 0x4a, 0x45,
	0x5e, 0xc1, 0x54, 0x98, 0x5f, 0x14, 0x3a, 0x61, 0x4a, 0x07, 0x81, 0xbc, 0x81, 0xcb, 0x74, 0xcb,
	0xb3, 0x9f, 0x71, 0x89, 0x55, 0x51, 0x2a, 0x77, 0x3c, 0xb3, 0xe6, 0x0f, 0xe9, 0x85, 0xd6, 0x96,
	0x5a, 0xf2, 0x32, 0x70, 0x86, 0xcc, 0xfe, 0x4c, 0x4f, 0xc1, 0x56, 0x5d, 0x5c, 0xb7, 0x4c, 0x27,
	0x9e, 0xd1, 0x33, 0xd5, 0x7d, 0x6b, 0x19, 0x79, 0x0d, 0xb0, 0x41, 0x8c, 0x05, 0xfe, 0x4e, 0x44,
	0xde, 0x67, 0x4d, 0x37, 0x88, 0x54, 0x0b, 0xe4, 0x39, 0x9c, 0x57, 0x32, 0x46, 0xd6, 0xa8, 0x9d,
	0xfb, 0x60, 0x66, 0xcd, 0xcf, 0xe9, 0xa4, 0x92, 0xe1, 0xbe, 0xf4, 0x6e, 0xe0, 0x71, 0x58, 0xe7,
	0x5c, 0x48, 0xcc, 0xd7, 0x22, 0xa9, 0x65, 0x92, 0xa9, 0x8a, 0xd7, 0xe4, 0x0a, 0xc6, 0xaa, 0xd3,
	0x33, 0x2e, 0xe9, 0x58, 0x75, 0xb7, 0x37, 0x00, 0xc3, 0xad, 0xc9, 0x05, 0x4c, 0xa2, 0xef, 0x8b,
	0x45, 0x18, 0x45, 0xce, 0x88, 0x00, 0xd8, 0xf7, 0x1f, 0xbf, 0xac, 0xc2, 0xcf, 0x8e, 0x75, 0xf7,
	0xc7, 0x82, 0xc9, 0x57, 0x03, 0x98, 0xac, 0xe0, 0xba, 0x47, 0x7a, 0x94, 0xfb, 0xf2, 0xc0, 0xf0,
	0x3f, 0x43, 0x5f, 0xb8, 0xff, 0x00, 0x9f, 0x3c, 0x85, 0x37, 0x22, 0x4b, 0xb8, 0x36, 0x30, 0x06,
	0xbf, 0x24, 0xcf, 0x0e, 0x0d, 0x27, 0xec, 0x87, 0xa4, 0x53, 0x80, 0xde, 0xe8, 0x53, 0x04, 0x6f,
	0xb9, 0x28, 0xfc, 0x72, 0xd7, 0xa0, 0xd8, 0x62, 0x5e, 0xa0, 0xf0, 0x37, 0x49, 0x2a, 0xaa, 0xec,
	0xd0, 0x63, 0x16, 0xe5, 0xc7, 0xbb, 0xa2, 0x52, 0x65, 0x9b, 0xee, 0xcb, 0xe0, 0xc8, 0x1c, 0x18,
	0x73, 0x60, 0xcc, 0x81, 0x31, 0xa7, 0x66, 0x8f, 0xde, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xdf,
	0xf4, 0x37, 0x57, 0x66, 0x02, 0x00, 0x00,
}
